{"version":3,"sources":["i18n.js","assets/img/brand/logo.png","utils/Logger/Log.js","polyfill.js","containers/DefaultAuth/ConfirmSignIn/ConfirmSignIn.js","containers/DefaultAuth/ConfirmSignUp/ConfirmSignUp.js","containers/DefaultAuth/ForgotPassword/ForgotPassword.js","containers/DefaultAuth/RequireNewPassword/RequireNewPassword.js","containers/DefaultAuth/SocialButtons/FacebookButton.js","containers/DefaultAuth/SocialButtons/SignInSocialButtons.js","containers/DefaultAuth/SignIn/SignIn.js","containers/DefaultAuth/SocialButtons/SignUpSocialButtons.js","containers/DefaultAuth/SignUp/SignUp.js","aws-exports.js","App.js","serviceWorker.js","index.js"],"names":["detectionOptions","order","lookupQuerystring","lookupCookie","lookupLocalStorage","caches","excludeCacheFor","htmlTag","document","documentElement","i18n","use","detector","backend","initReactI18next","init","detection","fallbackLng","ns","debug","keySeparator","loadPath","crossDomain","interpolation","escapeValue","react","wait","useSuspense","module","exports","COLOURS","trace","process","info","warn","error","Log","level","message","source","namespace","createDebug","toString","color","this","generateMessage","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","createEvent","initCustomEvent","prototype","Event","DefaultConfirmSignIn","err","t","props","options","place","type","icon","autoDismiss","notify","notificationAlert","authState","className","ref","c","Container","Row","Col","md","CardGroup","Card","CardBody","Form","state","mfaType","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","autoFocus","placeholder","key","name","autoComplete","onChange","handleInputChange","xs","Button","onClick","changeState","confirm","style","width","active","ConfirmSignIn","withTranslation","DefaultConfirmSignUp","isconfirming","onClickResend","bind","onClickConfirm","resend","setState","username","usernameFromAuthData","disabled","value","ConfirmSignUp","DefaultForgotPassword","isRequestingPassword","isSubmittingPassword","onSubmit","onRequestPassword","refs","submit","send","delivery","submitView","sendView","ForgotPassword","DefaultRequireNewPassword","requiredAttributes","authData","challengeParam","map","attribute","change","RequireNewPassword","FacebookButton","withFacebook","Translation","facebookSignIn","block","SignInSocialButtons","facebook_app_id","onStateChange","includes","federated","Auth","configure","Error","oauth","oauth_config","Object","assign","awsCognito","auth0","JS","isEmpty","facebook","Component","DefaultSignIn","isLoggingIn","onSignIn","inputs","password","signIn","src","logo","class","SignIn","SignUpSocialButtons","sm","DefaultSignUp","validate","isSigningUp","onSignUp","validateEmail","validateEqual","validateMinCharacter","e","characters","target","length","test","compare","email","repeatpassword","signUp","checkCustomSignUpFields","signUpFields","signUpConfig","sortFields","valid","invalid","FormFeedback","CardFooter","SignUp","awsmobile","DefaultLayout","React","lazy","Login","Register","Page404","Page500","Amplify","aws_exports","App","Suspense","fallback","exact","path","render","withAuthenticator","VerifyContact","hiddenDefaults","Boolean","location","hostname","match","ReactDOM","I18nextProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0788657.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport backend from \"i18next-xhr-backend\";\n\nvar detectionOptions = {\n  // order and from where user language should be detected\n  order: [\"navigator\", \"cookie\", \"localStorage\", \"querystring\", \"htmlTag\"],\n\n  // keys or params to lookup language from\n  lookupQuerystring: \"lng\",\n  lookupCookie: \"i18next\",\n  lookupLocalStorage: \"i18nextLng\",\n\n  // cache user language on\n  caches: [\"localStorage\", \"cookie\"],\n  excludeCacheFor: [\"cimode\"], // languages to not persist (cookie, localStorage)\n\n  // optional expire and domain for set cookie\n  // cookieMinutes: 10,\n  // cookieDomain: 'myDomain',\n\n  // optional htmlTag with lang attribute, the default is:\n  htmlTag: document.documentElement\n};\n\ni18n\n  .use(detector)\n  .use(backend)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    // lng: \"en\",\n    detection: detectionOptions,\n    fallbackLng: \"pt_BR\", // use en if detected lng is not available\n\n    ns: [\"validation\", \"common\", \"glossary\"],\n\n    debug: false,\n    keySeparator: false, // we do not use keys in form messages.welcome\n    backend: {\n      // load from i18next-gitbook repo\n      loadPath: \"/locales/{{lng}}/{{ns}}.json\",\n      crossDomain: true\n    },\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    },\n\n    // react-i18next options\n    react: {\n      wait: true,\n      useSuspense: false\n    }\n  });\n\nexport default i18n;\n","module.exports = __webpack_public_path__ + \"static/media/logo.7e443afe.png\";","import debug from 'debug';\n \nconst BASE = process.env.REACT_APP_APP_NAME;\nconst COLOURS = {\n  trace: process.env.REACT_APP_LOG_COLOURS_TRACE,\n  info: process.env.REACT_APP_LOG_COLOURS_INFO,\n  warn: process.env.REACT_APP_LOG_COLOURS_WARN,\n  error: process.env.REACT_APP_LOG_COLOURS_ERROR\n}; \n\nclass Log {\n  generateMessage(level, message, source) {\n\n    // Set the prefix which will cause debug to enable the message\n    const namespace = `${BASE}:${level}`;\n    const createDebug = debug(namespace.toString());\n    \n    // Set the colour of the message based on the level\n    createDebug.color = COLOURS[level];\n    \n    if(source) { createDebug(source, message); }\n    else { createDebug(message); }\n  }\n  \n  trace(message, source) {\n    return this.generateMessage('trace', message, source);\n  }\n  \n  info(message, source) {\n    return this.generateMessage('info', message, source);\n  }\n  \n  warn(message, source) {\n    return this.generateMessage('warn', message, source);\n  }\n  \n  error(message, source) {\n    return this.generateMessage('error', message, source);\n  }\n}\n\nexport default new Log();","/*\n* required polyfills\n*/\nimport \"core-js\";\nimport 'core-js/features/set/map';\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es/symbol'\n// import 'core-js/es/object'\n// import 'core-js/es/function'\n// import 'core-js/es/parse-int'\n// import 'core-js/es/parse-float'\n// import 'core-js/es/number'\n// import 'core-js/es/math'\n// import 'core-js/es/string'\n// import 'core-js/es/date'\n// import 'core-js/es/array'\n// import 'core-js/es/regexp'\n// import 'core-js/es/map'\n// import 'core-js/es/weak-map'\n// import 'core-js/es/set'\n// import 'core-js/es/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n  if ( typeof window.CustomEvent === \"function\" ) return false\n\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    var evt = document.createEvent( 'CustomEvent' )\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n})()\n","import React from 'react';\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport { ConfirmSignIn  } from 'aws-amplify-react';\nimport NotificationAlert from 'react-notification-alert';\nimport { withTranslation } from 'react-i18next';\nimport Log from '../../../utils/Logger/Log';\n\nclass DefaultConfirmSignIn  extends ConfirmSignIn  {\n\n\n  error(err) {\n    const { t } = this.props;\n    Log.error(err, 'DefaultAuth.CofnirmSignIn');\n    const options = { \n      place: 'tl',\n      message: (\n          <div>\n              <div>\n                  { (err.message)?\n                      t(err.message):\n                      t(err) \n                  }\n              </div>\n          </div> \n      ),\n      type: \"danger\",\n      icon: \"now-ui-icons ui-1_bell-53\",\n      autoDismiss: 7\n    };\n    this.notify.notificationAlert(options);\n  }\n\n  render() {\n    const { t } = this.props;\n    const { authState } = this.props;\n    if (authState !== 'confirmSignIn') {\n      return null;\n    }\n\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <NotificationAlert ref={(c) => { this.notify = c; }} />\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"8\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <Form>\n                      <h1>{ t('common:Confirm') } {this.state.mfaType} { t('Code') }</h1>\n                      <p className=\"text-muted\">{ t('Please enter the code') }</p>\n                      <InputGroup className=\"mb-4\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-lock\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input \n                            autoFocus\n                            placeholder={ t('Code') }\n                            key=\"code\"\n                            name=\"code\"\n                            autoComplete=\"off\"\n                            onChange={this.handleInputChange}\n                        />\n                     \n                      </InputGroup>\n                      <Row>\n                        <Col xs=\"6\">\n                          <Button color=\"link\" className=\"px-0\"  onClick={() => this.changeState('signIn')}>{ t('Back to Sign In') }</Button>\n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                          <Button color=\"primary\" className=\"px-4\" onClick={this.confirm}>{ t('common:Confirm') }</Button>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n                <Card className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: 44 + '%' }}>\n                  <CardBody className=\"text-center\">\n                    <div>\n                      <h2>{ t('Confirm Sign In') }</h2>\n                      <p>{ t('Confirm Sign In Text') }</p>\n                      <Button color=\"primary\" className=\"mt-3\" active onClick={() => this.changeState('signUp')}>{ t('Register Now!') }</Button>\n                    </div>\n                  </CardBody>\n                </Card>\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation('auth') (DefaultConfirmSignIn);","import React from 'react';\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport { ConfirmSignUp  } from 'aws-amplify-react';\nimport NotificationAlert from 'react-notification-alert';\nimport { withTranslation } from 'react-i18next';\nimport Log from '../../../utils/Logger/Log';\n\nclass DefaultConfirmSignUp  extends ConfirmSignUp  {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isconfirming: false\n    }\n    this.onClickResend = this.onClickResend.bind(this);\n    this.onClickConfirm = this.onClickConfirm.bind(this);\n  }\n\n  error(err) {\n    const { t } = this.props;\n    Log.error(err, 'DefaultAuth.ConfirmSignUp');\n    const options = {\n      place: 'tl',\n      message: (\n          <div>\n              <div>\n                  { (err.message)?\n                      t(err.message):\n                      t(err) \n                  }\n              </div>\n          </div> \n      ),\n      type: \"danger\",\n      icon: \"now-ui-icons ui-1_bell-53\",\n      autoDismiss: 7\n    };\n    this.notify.notificationAlert(options);\n  }\n\n  async onClickResend() {\n   \n    await this.resend();\n    const options = {\n      place: 'tl',\n      message: (\n          <div>\n              <div>\n                  Code requested.\n              </div>\n          </div> \n      ),\n      type: \"info\",\n      icon: \"now-ui-icons ui-1_bell-53\",\n      autoDismiss: 7\n    };\n    this.notify.notificationAlert(options);\n  }\n\n  async onClickConfirm() {\n    this.setState({ isconfirming: false });\n    await this.confirm();\n    this.setState({ isconfirming: true });\n    const options = {\n      place: 'tl',\n      message: (\n          <div>\n              <div>\n                  Account bestätigt\n              </div>\n          </div> \n      ),\n      type: \"info\",\n      icon: \"now-ui-icons ui-1_bell-53\",\n      autoDismiss: 7\n    };\n    this.notify.notificationAlert(options);\n  }\n\n  render() {\n    const { t } = this.props;\n    const { authState } = this.props;\n    if (authState !== 'confirmSignUp') {\n      return null;\n    }\n\n    const username = this.usernameFromAuthData();\n\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <NotificationAlert ref={(c) => { this.notify = c; }} />\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"8\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <Form>\n                      <h1>{ t('Confirm Sign Up') }</h1>\n                      <p className=\"text-muted\">{ t('Please enter the code') }</p>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-user\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input  \n                          placeholder={ t('common:Email') }\n                          key=\"username\"\n                          name=\"username\"\n                          disabled={username}\n                          value={username ? username : \"\"}\n                          onChange={this.handleInputChange}\n                        />\n                      </InputGroup>\n                      <InputGroup className=\"mb-4\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-lock\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input \n                            autoFocus\n                            placeholder={ t('Code') }\n                            key=\"code\"\n                            name=\"code\"\n                            autoComplete=\"off\"\n                            onChange={this.handleInputChange}\n                        />\n                        <InputGroupAddon addonType=\"append\">\n                          <Button color=\"primary\" className=\"px-0\" onClick={this.onClickResend}>\n                            { t('Resend Code') }\n                          </Button>\n                        </InputGroupAddon>\n                        \n                      </InputGroup>\n                      <Row>\n                        <Col xs=\"6\">\n                          <Button color=\"link\" className=\"px-0\"  onClick={() => this.changeState('signIn')}>{ t('Back to Sign In') }</Button>\n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                          <Button color=\"primary\" className=\"px-4\" onClick={this.onClickConfirm}>{ t('common:Confirm') }{' '} \n                            { (this.state.isconfirming) ? <i className=\"fa fa-spin fa-circle-o-notch\"/>: null }</Button>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n                <Card className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: 44 + '%' }}>\n                  <CardBody className=\"text-center\">\n                    <div>\n                      <h2>{ t('Confirm Sign Up') }</h2>\n                      <p>{ t('Confirm Sign Up Text') }</p>\n                      <Button color=\"primary\" className=\"mt-3\" active onClick={() => this.changeState('signUp')}>{ t('Register Now!') }</Button>\n                    </div>\n                  </CardBody>\n                </Card>\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation('auth') (DefaultConfirmSignUp);","import React from 'react';\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport { ForgotPassword  } from 'aws-amplify-react';\nimport NotificationAlert from 'react-notification-alert';\nimport { withTranslation } from 'react-i18next';\nimport Log from '../../../utils/Logger/Log';\n\nclass DefaultForgotPassword  extends ForgotPassword  {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isRequestingPassword: false,\n      isSubmittingPassword: false\n    }\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onRequestPassword = this.onRequestPassword.bind(this);\n  }\n\n  error(err) {\n    const { t } = this.props;\n    Log.error(err, 'DefaultAuth.ForgotPassword');\n    const options = {\n      place: 'tl',\n      message: (\n          <div>\n              <div>\n                  { (err.message)?\n                      t(err.message):\n                      t(err) \n                  }\n              </div>\n          </div> \n      ),\n      type: \"danger\",\n      icon: \"now-ui-icons ui-1_bell-53\",\n      autoDismiss: 7\n    };\n    this.refs.notify.notificationAlert(options);\n  }\n\n  async onSubmit() {\n    this.setState({ isSubmittingPassword : true });\n    await this.submit();\n    this.setState({ isSubmittingPassword : false });\n  }\n  \n  async onRequestPassword() {\n    this.setState({ isRequestingPassword : true });\n    await this.send();\n    this.setState({ isRequestingPassword : false });\n  }\n\n  sendView() {\n    const { t } = this.props;\n      return (\n        <InputGroup className=\"mb-3\">\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>\n              <i className=\"icon-user\"></i>\n            </InputGroupText>\n          </InputGroupAddon>\n          <Input  \n              autoFocus\n              placeholder={ t('common:Email') }\n              key=\"username\"\n              name=\"username\"\n              onChange={this.handleInputChange} />\n        </InputGroup>\n      );\n  }\n\n  submitView() {\n    const { t } = this.props;\n      return (\n          <div>\n              <InputGroup className=\"mb-3\">\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <i className=\"icon-user\"></i>\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input  \n                    autoFocus\n                    placeholder={ t('Code') }\n                    key=\"code\"\n                    name=\"code\"\n                    autoComplete=\"off\"\n                    onChange={this.handleInputChange} \n                  />\n                <InputGroupAddon addonType=\"append\"><Button color=\"primary\" className=\"px-0\" onClick={this.send}>&nbsp; Resend Code &nbsp;</Button></InputGroupAddon>\n              </InputGroup>\n              <InputGroup className=\"mb-4\">\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <i className=\"icon-lock\"></i>\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input \n                    placeholder={ t('common:Password') }\n                    key=\"password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={this.handleInputChange} />\n              </InputGroup>\n          </div>\n      );\n  }\n\n\n  render() {\n    const { t } = this.props;\n    const { authState } = this.props;\n    if (authState !== 'forgotPassword') {\n      return null;\n    }\n    // if (hide && hide.includes(SignIn)) { return null; }\n\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <NotificationAlert ref=\"notify\" />\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"5\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <Form>\n                      <h1>{ t('Forgot Password') }</h1>\n                      <p className=\"text-muted\">{ t('Reset your password') }</p>\n                      { this.state.delivery? this.submitView() : this.sendView() }\n                      <Row>\n                        <Col xs=\"6\">\n                          <Button color=\"link\" className=\"px-0\" onClick={() => {this.setState({delivery:false}); this.changeState('signIn')}}>{ t('Back to Sign in') }</Button>\n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                          { this.state.delivery ? \n                              <Button color=\"primary\" className=\"px-4\" onClick={this.onSubmit}>{ t('common:Submit') }{' '} \n                              { (this.state.isSubmittingPassword) ? <i className=\"fa fa-spin fa-circle-o-notch\"/>: null }</Button> :\n                              <Button color=\"primary\" className=\"px-4\" onClick={this.onRequestPassword}>{ t('Request') }{' '} \n                              { (this.state.isRequestingPassword) ? <i className=\"fa fa-spin fa-circle-o-notch\"/>: null }</Button>\n                          }  \n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>                \n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation('auth') (DefaultForgotPassword);","import React from 'react';\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport { RequireNewPassword  } from 'aws-amplify-react';\nimport NotificationAlert from 'react-notification-alert';\nimport { withTranslation } from 'react-i18next';\nimport Log from '../../../utils/Logger/Log';\n\nclass DefaultRequireNewPassword   extends RequireNewPassword   {\n\n  error(err) {\n    const { t } = this.props;\n    Log.error(err, 'DefaultAuth.RequireNewPassword');\n    const options = {\n      place: 'tl',\n      message: (\n          <div>\n              <div>\n                  { (err.message)?\n                      t(err.message):\n                      t(err) \n                  }\n              </div>\n          </div> \n      ),\n      type: \"danger\",\n      icon: \"now-ui-icons ui-1_bell-53\",\n      autoDismiss: 7\n    };\n    this.notify.notificationAlert(options);\n  }\n\n  render() {\n    const { t } = this.props;\n    const { authState } = this.props;\n    if (authState !== 'requireNewPassword') {\n      return null;\n    }\n\n    const user = this.props.authData;\n    const { requiredAttributes } = user.challengeParam;\n\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <NotificationAlert ref={(c) => { this.notify = c; }} />\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"8\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <Form>\n                      <h1>{ t('Change Password') }</h1>\n                      <p className=\"text-muted\">{ t('Password change required') }</p>\n                      <InputGroup className=\"mb-4\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-lock\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input \n                            placeholder={ t('Password') }\n                            key=\"password\"\n                            type=\"password\"\n                            name=\"password\"\n                            onChange={this.handleInputChange} />\n                      </InputGroup>\n                      {requiredAttributes\n                        .map(attribute => (\n                            <Input\n                                placeholder={attribute}\n                                key={attribute}\n                                name={attribute}\n                                type=\"text\"\n                                onChange={this.handleInputChange}\n                            />\n                        ))}\n                      <Row>\n                        <Col xs=\"6\">\n                          \n                          <Button color=\"link\" className=\"px-0\" onClick={() => this.changeState('signIn')}>{ t('Back to Sign in') }</Button>\n                          \n                          \n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                              <Button color=\"primary\" className=\"px-4\" onClick={this.change}>{ t('common:Change') }</Button> \n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n                <Card className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: 44 + '%' }}>\n                  <CardBody className=\"text-center\">\n                    <div>\n                      <h2>{ t('Require new Password') }</h2>\n                      <p>{ t('Require new Password Text') }</p>\n                      <Button color=\"primary\" className=\"mt-3\" active onClick={() => this.changeState('signUp')}>{ t('Register Now!') }</Button>\n                    </div>\n                  </CardBody>\n                </Card>\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation('auth') (DefaultRequireNewPassword);","import React from 'react';\nimport { Button } from 'reactstrap';\nimport { withFacebook } from 'aws-amplify-react';\nimport { Translation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nconst CustomButton = (props) => (\n    <Translation ns={'auth'}>\n        {(t) => (\n            <Button\n                className=\"btn-facebook\"\n                onClick={props.facebookSignIn}\n                block\n            >\n                {t('Sign In with Facebook')}\n            </Button>\n        )}\n    </Translation>\n);\n\nCustomButton.propTypes = {\n    facebookSignIn: PropTypes.func,\n};\n\nexport const FacebookButton = withFacebook(CustomButton);\n","import React, { Component } from 'react';\nimport { FacebookButton } from './FacebookButton';\nimport { Auth } from 'aws-amplify';\nimport { JS } from '@aws-amplify/core';\n// import { Strike } from 'aws-amplify-react/dist/Amplify-UI/Amplify-UI-Components-React';\nimport PropTypes from 'prop-types';\n\nexport class SignInSocialButtons extends Component {\n\n    facebook(facebook_app_id) {\n        if (!facebook_app_id) { return null; }\n\n        const { onStateChange } = this.props;\n        return <FacebookButton\n                facebook_app_id={facebook_app_id}\n                onStateChange={onStateChange}\n                />;\n    }\n\n\n    render() {\n        const { authState } = this.props;\n        if (!['signIn', 'signedOut', 'signedUp'].includes(authState)) { return null; }\n\n        const federated = this.props.federated || {};\n        if (!Auth || typeof Auth.configure !== 'function') {\n            throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');\n        }\n\n        const { oauth={} } = Auth.configure();\n        // backward compatibility\n        if (oauth['domain']) {\n            federated.oauth_config = Object.assign({}, federated.oauth_config, oauth);\n        } else if (oauth.awsCognito) {\n            federated.oauth_config = Object.assign({}, federated.oauth_config, oauth.awsCognito);\n        }\n\n        if (oauth.auth0) {\n            federated.auth0 = Object.assign({}, federated.auth0, oauth.auth0);\n        }\n\n        if (JS.isEmpty(federated)) { return null; }\n\n        const { facebook_app_id } = federated;\n        // const { google_client_id, facebook_app_id, amazon_client_id, oauth_config, auth0 } = federated;\n\n        return (\n            <div>\n                {/* <Strike >or</Strike> */}\n                <div>\n                {/* {this.google(google_client_id)} */}\n                </div>\n                <div className=\"text-center\">\n                {this.facebook(facebook_app_id)}\n                </div>\n                <div>\n                {/* {this.amazon(amazon_client_id)} */}\n                </div>\n                <div>\n                {/* {this.OAuth(oauth_config)} */}\n                </div>\n                <div>\n                {/* {this.auth0(auth0)} */}\n                </div>\n            </div>\n        );\n}\n}\nSignInSocialButtons.propTypes = {\n  authState: PropTypes.string,\n  federated: PropTypes.any,\n  onStateChange: PropTypes.func\n}\n","import React from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardGroup,\n  Col,\n  Container,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Row\n} from \"reactstrap\";\nimport { SignIn } from \"aws-amplify-react\";\nimport NotificationAlert from \"react-notification-alert\";\nimport { SignInSocialButtons } from \"../SocialButtons/SignInSocialButtons\";\nimport { withTranslation } from \"react-i18next\";\nimport Log from \"../../../utils/Logger/Log\";\nimport logo from '../../../assets/img/brand/logo.png'\n\nclass DefaultSignIn extends SignIn {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoggingIn: false\n    };\n    this.onSignIn = this.onSignIn.bind(this);\n    this.changeState = this.changeState.bind(this);\n  }\n\n  error(err) {\n    const { t } = this.props;\n    Log.error(err, \"DefaultAuth.SignIn\");\n    const options = {\n      place: \"tl\",\n      message: (\n        <div>\n          <div>{err.message ? t(err.message) : t(err)}</div>\n        </div>\n      ),\n      type: \"danger\",\n      icon: \"now-ui-icons ui-1_bell-53\",\n      autoDismiss: 7\n    };\n    this.notify.notificationAlert(options);\n  }\n\n  async onSignIn() {\n    if (!this.inputs.username) {\n      this.error(\"Username cannot be empty\");\n    } else if (!this.inputs.password) {\n      this.error(\"Password cannot be empty\");\n    } else {\n      this.setState({ isLoggingIn: true });\n      await this.signIn();\n      this.setState({ isLoggingIn: false });\n    }\n  }\n\n  render() {\n    const { t } = this.props;\n    const { authState, federated, onStateChange } = this.props;\n    if (\n      authState !== \"signIn\" &&\n      authState !== \"signedUp\" &&\n      authState !== \"signedOut\"\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <NotificationAlert\n          ref={c => {\n            this.notify = c;\n          }}\n        />\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"5\">\n              <CardGroup>\n                <Card className=\"p-2\">\n                  <CardBody>\n                    <div className=\"text-center mb-5\">\n                      <img src={logo} class=\"img-fluid\" />\n                    </div>\n                    <Form>\n                      <p className=\"text-muted\">\n                        {t(\"Sign In to your account\")}\n                      </p>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-user\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          autoFocus\n                          placeholder={t(\"common:Email\")}\n                          key=\"username\"\n                          name=\"username\"\n                          onChange={this.handleInputChange}\n                        />\n                      </InputGroup>\n                      <InputGroup className=\"mb-4\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-lock\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          placeholder={t(\"common:Password\")}\n                          key=\"password\"\n                          type=\"password\"\n                          name=\"password\"\n                          onChange={this.handleInputChange}\n                        />\n                      </InputGroup>\n                      <Row>\n                        <Col xs=\"6\">\n                          <Button\n                            color=\"link\"\n                            className=\"px-0\"\n                            onClick={() => this.changeState(\"forgotPassword\")}\n                          >\n                            {t(\"Forgot password?\")}\n                          </Button>\n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                          <Button\n                            color=\"primary\"\n                            className=\"px-4\"\n                            onClick={this.onSignIn}\n                          >\n                            {t(\"common:Login\")}{\" \"}\n                            {this.state.isLoggingIn ? (\n                              <i className=\"fa fa-spin fa-circle-o-notch\" />\n                            ) : null}\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form>\n                    <SignInSocialButtons\n                      onStateChange={onStateChange}\n                      federated={federated}\n                      authState={authState}\n                    />\n                  </CardBody>\n                </Card>                \n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\n// export default DefaultSignIn;\nexport default withTranslation(\"auth\", { wait: true })(DefaultSignIn);\n","import React, { Component } from 'react';\nimport { FacebookButton } from './FacebookButton';\nimport { Auth } from 'aws-amplify';\nimport { JS } from '@aws-amplify/core';\nimport { Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport class SignUpSocialButtons extends Component {\n\n    facebook(facebook_app_id) {\n        if (!facebook_app_id) { return null; }\n\n        const { onStateChange } = this.props;\n        return <Col xs=\"12\" sm=\"6\">\n                    <FacebookButton\n                    facebook_app_id={facebook_app_id}\n                    onStateChange={onStateChange}\n                    />\n                </Col>;\n    }\n\n\n    render() {\n        const federated = this.props.federated || {};\n        if (!Auth || typeof Auth.configure !== 'function') {\n            throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');\n        }\n\n        const { oauth={} } = Auth.configure();\n        // backward compatibility\n        if (oauth['domain']) {\n            federated.oauth_config = Object.assign({}, federated.oauth_config, oauth);\n        } else if (oauth.awsCognito) {\n            federated.oauth_config = Object.assign({}, federated.oauth_config, oauth.awsCognito);\n        }\n\n        if (oauth.auth0) {\n            federated.auth0 = Object.assign({}, federated.auth0, oauth.auth0);\n        }\n\n        if (JS.isEmpty(federated)) { return null; }\n\n        const { facebook_app_id } = federated;\n        // const { google_client_id, facebook_app_id, amazon_client_id, oauth_config, auth0 } = federated;\n\n        return (\n            <Row>\n                {this.facebook(facebook_app_id)}\n            </Row>\n        );\n}\n}\nSignUpSocialButtons.propTypes = {\n  federated: PropTypes.any,\n  onStateChange: PropTypes.func\n}\n","import React from 'react';\nimport { Button, Card, CardBody, CardFooter, Col, Container, Form, FormFeedback, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport { SignUp } from 'aws-amplify-react';\nimport { JS } from '@aws-amplify/core';\nimport NotificationAlert from 'react-notification-alert';\nimport { SignUpSocialButtons } from '../SocialButtons/SignUpSocialButtons';\nimport { withTranslation } from 'react-i18next';\nimport Log from '../../../utils/Logger/Log';\n\nclass DefaultSignUp extends SignUp {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validate: {},\n      isSigningUp: false,\n    }\n    this.onSignUp = this.onSignUp.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.validateEqual = this.validateEqual.bind(this);\n    this.validateMinCharacter = this.validateMinCharacter.bind(this);\n  }\n\n  error(err) {\n    const { t } = this.props;\n    Log.error(err, 'DefaultAuth.SignUp');\n    const options = {\n      place: 'tl',\n      message: (\n          <div>\n              <div>\n                  { (err.message)?\n                      t(err.message):\n                      t(err) \n                  }\n              </div>\n          </div> \n      ),\n      type: \"danger\",\n      icon: \"now-ui-icons ui-1_bell-53\",\n      autoDismiss: 7\n    };\n    this.notify.notificationAlert(options);\n  }\n\n  async validateMinCharacter(e, characters) {\n    const { validate } = this.state\n    if (e.target.value.length >= characters) {\n      validate[e.target.name] = 'has-success';\n    } else {\n      validate[e.target.name] = 'has-error';\n    }\n    this.setState({ validate })\n  }\n\n  \n  validateEmail(e) {\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const { validate } = this.state\n    if (emailRex.test(e.target.value)) {\n      validate[e.target.name] = 'has-success';\n    } else {\n      validate[e.target.name] = 'has-error';\n    }\n    this.setState({ validate })\n  }\n\n  validateEqual(e, compare) {\n    const { validate } = this.state\n    if (e.target.value === compare) {\n      validate[e.target.name] = 'has-success';\n    } else {\n      validate[e.target.name] = 'has-error';\n    }\n    this.setState({ validate })\n  }\n\n  async onSignUp() {\n    if ((this.state.validate.email === 'has-success') && \n      (this.state.validate.password === 'has-success') &&\n      (this.state.validate.repeatpassword === 'has-success')) {\n      this.inputs.username = this.inputs.email;\n      this.setState({ isSigningUp: true });\n      await this.signUp();\n      this.setState({ \n        isSigningUp: false,\n        validate: {}\n      });\n    } \n  }\n\n  render() {\n    const { t } = this.props;\n    const { authState, federated, onStateChange } = this.props;\n    if (authState !== 'signUp') {\n      return null;\n    }\n    \n  \n    if (this.checkCustomSignUpFields()) {\n      this.signUpFields = this.props.signUpConfig.signUpFields;\n    }\n    this.sortFields();\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <NotificationAlert ref={(c) => { this.notify = c; }} />\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"6\">\n              <Card className=\"mx-4\">\n                <CardBody className=\"p-4\">\n                  <Form>\n                    <h1>{ t('common:Register') }</h1>\n                    <p className=\"text-muted\">{ t('Create your account') }</p>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"icon-user\"></i>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input \n                        type=\"text\" \n                        placeholder={ t('common:Email') } \n                        autoComplete=\"email\"\n                        autoFocus\n                        key=\"email\"\n                        name=\"email\"\n                        onChange={ (e) => {\n                          this.validateEmail(e)\n                          this.handleInputChange(e)\n                        }}\n                        valid={ this.state.validate.email === 'has-success' }\n                        invalid={ this.state.validate.email === 'has-error' }\n                        />\n                      <FormFeedback>\n                        { t('Please enter a correct email address.') }\n                      </FormFeedback>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"icon-lock\"></i>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input \n                        type=\"password\" \n                        placeholder={ t('common:Password') } \n                        autoComplete=\"password\"\n                        key=\"password\"\n                        name=\"password\"\n                        onChange={ (e) => {\n                          this.validateMinCharacter(e,8)\n                          this.handleInputChange(e)\n                        }}\n                        valid={ this.state.validate.password === 'has-success' }\n                        invalid={ this.state.validate.password === 'has-error' }\n                      />\n                      <FormFeedback>\n                        { t('Password must have at least 8 characters.') } \n                      </FormFeedback>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"icon-lock\"></i>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input \n                        type=\"password\" \n                        placeholder={ t('common:ConfirmPassword') }\n                        autoComplete=\"password\"\n                        key=\"repeatpassword\"\n                        name=\"repeatpassword\"\n                        onChange={ (e) => {\n                          this.validateEqual(e,this.inputs.password)\n                        }}\n                        valid={ this.state.validate.repeatpassword === 'has-success' }\n                        invalid={ this.state.validate.repeatpassword === 'has-error' }\n                      \n                      />\n                      <FormFeedback>\n                      { t('Password and confirm password does not match.') }\n                      </FormFeedback>\n                    </InputGroup>\n                    <Row>\n                        <Col xs=\"6\">\n                          <Button color=\"link\" className=\"px-0\" onClick={() => this.changeState('signIn')}>{ t('Have an account? Sign in') }</Button>\n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                          <Button color=\"success\" className=\"px-4\" onClick={this.onSignUp}>{ t('common:Register') }{' '} \n                        { (this.state.isSigningUp) ? <i className=\"fa fa-spin fa-circle-o-notch\"/>: null }</Button>\n                        </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n                { (!JS.isEmpty(federated))?\n                  <CardFooter className=\"p-4\">\n                    <SignUpSocialButtons\n                      onStateChange={onStateChange}\n                      federated={federated}\n                      authState={authState}\n                    />\n                  </CardFooter>\n                  :\n                  null\n                }\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation('auth') (DefaultSignUp);","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_1ARS3TxE3\",\n    \"aws_user_pools_web_client_id\": \"nobjb26da6vi50mu533bgnes6\",\n    \"oauth\": {},\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"AdminQueries\",\n            \"endpoint\": \"https://6f8jm41plb.execute-api.us-east-1.amazonaws.com/dev\",\n            \"region\": \"us-east-1\"\n        }\n    ]\n};\n\n\nexport default awsmobile;\n","/* eslint-disable react/jsx-key */\nimport React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n// import { renderRoutes } from 'react-router-config';\nimport './App.scss';\n\n//AWS Amplify\nimport Amplify from 'aws-amplify';\nimport { VerifyContact, withAuthenticator } from 'aws-amplify-react';\nimport { DefaultConfirmSignIn, DefaultConfirmSignUp, DefaultForgotPassword, DefaultSignUp, DefaultSignIn, DefaultRequireNewPassword} from './containers/DefaultAuth'\nimport aws_exports from './aws-exports';\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\n\n\n// Containers\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout'));\n\n// Pages\nconst Login = React.lazy(() => import('./views/Pages/Login'));\nconst Register = React.lazy(() => import('./views/Pages/Register'));\nconst Page404 = React.lazy(() => import('./views/Pages/Page404'));\nconst Page500 = React.lazy(() => import('./views/Pages/Page500'));\n\nAmplify.configure(aws_exports);\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <HashRouter>\n          <React.Suspense fallback={loading()}>\n            <Switch>\n              <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props}/>} />\n              <Route exact path=\"/register\" name=\"Register Page\" render={props => <Register {...props}/>} />\n              <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>} />\n              <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>} />\n              <Route path=\"/\" name=\"Home\" render={props => <DefaultLayout {...props}/>} />\n            </Switch>\n          </React.Suspense>\n      </HashRouter>\n    );\n  }\n}\n\nconst signUpConfig = {\n  hiddenDefaults: ['phone_number'],\n};\n\nexport default withAuthenticator(App, false, [\n  <DefaultSignIn federated={aws_exports.federated}/>,\n  <DefaultConfirmSignIn/>,\n  <VerifyContact/>,\n  <DefaultSignUp federated={aws_exports.federated} signUpConfig={signUpConfig} />,\n  <DefaultConfirmSignUp/>,\n  <DefaultForgotPassword/>,\n  <DefaultRequireNewPassword/>\n]);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"react-app-polyfill/ie9\"; // For IE 9-11 support\nimport \"react-app-polyfill/stable\";\n// import 'react-app-polyfill/ie11'; // For IE 11 support\nimport \"./polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"./i18n\"; // initialized i18next instance\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Add these lines:\nif (process.env.NODE_ENV !== \"production\") {\n  localStorage.setItem(\"debug\", process.env.REACT_APP_APP_NAME + \":*\");\n}\n\nReactDOM.render(\n  <I18nextProvider i18n={i18n}>\n    <App />\n  </I18nextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}