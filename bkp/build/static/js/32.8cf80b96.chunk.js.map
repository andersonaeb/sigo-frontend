{"version":3,"sources":["views/Base/Tooltips/Tooltips.js"],"names":["TooltipItem","props","toggle","bind","state","tooltipOpen","this","setState","className","color","id","item","text","placement","isOpen","target","React","Component","Tooltips","tooltips","i","newArray","map","element","index","href","rel","autohide","tooltip","key"],"mappings":"uSAGMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKC,MAAQ,CACXC,aAAa,GALE,E,qDAUjBC,KAAKC,SAAS,CACZF,aAAcC,KAAKF,MAAMC,gB,+BAK3B,OACE,8BACE,kBAAC,IAAD,CAAQG,UAAU,OAAOC,MAAM,YAAYC,GAAI,WAAaJ,KAAKL,MAAMS,IACpEJ,KAAKL,MAAMU,KAAKC,MAEnB,kBAAC,IAAD,CAASC,UAAWP,KAAKL,MAAMU,KAAKE,UAAWC,OAAQR,KAAKF,MAAMC,YAAaU,OAAQ,WAAaT,KAAKL,MAAMS,GAAIR,OAAQI,KAAKJ,QAAhI,yB,GAtBkBc,IAAMC,WA8B1BC,E,kDAEJ,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKC,MAAQ,CACXC,YAAa,EAAC,GAAO,GACrBc,SAAU,CACR,CACEN,UAAW,MACXD,KAAM,OAER,CACEC,UAAW,SACXD,KAAM,UAER,CACEC,UAAW,OACXD,KAAM,QAER,CACEC,UAAW,QACXD,KAAM,WArBK,E,mDA2BZQ,GACL,IAAMC,EAAWf,KAAKF,MAAMC,YAAYiB,KAAI,SAACC,EAASC,GACpD,OAAQA,IAAUJ,IAAKG,KAEzBjB,KAAKC,SAAS,CACZF,YAAagB,M,+BAIP,IAAD,OACP,OACE,yBAAKb,UAAU,mBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGA,UAAU,wBAA0B,4CACvC,yBAAKA,UAAU,uBACb,uBAAGiB,KAAK,oDAAoDC,IAAI,sBAAsBX,OAAO,SAASP,UAAU,sBAC9G,2BAAOA,UAAU,cAAjB,WAIN,kBAAC,IAAD,KAEE,qDAA0B,uBAAGiB,KAAK,IAAIf,GAAG,kBAAf,WAA1B,KACA,kBAAC,IAAD,CAASG,UAAU,QAAQC,OAAQR,KAAKF,MAAMC,YAAY,GAAIU,OAAO,iBAAiBb,OAAQ,WAAO,EAAKA,OAAO,KAAjH,kBAKJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGM,UAAU,wBAA0B,2CACvC,qDAEF,kBAAC,IAAD,KAEE,wFAA6D,uBAAGiB,KAAK,IAAIf,GAAG,2BAAf,WAA7D,KACA,kBAAC,IAAD,CAASG,UAAU,MAAMC,OAAQR,KAAKF,MAAMC,YAAY,GAAIsB,UAAU,EAAOZ,OAAO,0BAA0Bb,OAAQ,WAAO,EAAKA,OAAO,KAAzI,8BAKJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGM,UAAU,wBAA0B,2CACvC,yCAEF,kBAAC,IAAD,KACGF,KAAKF,MAAMe,SAASG,KAAI,SAACM,EAASR,GACjC,OAAO,kBAACpB,EAAD,CAAa6B,IAAKT,EAAGT,KAAMiB,EAASlB,GAAIU,SAIrD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGZ,UAAU,wBAA0B,2CACvC,iDAEF,kBAAC,IAAD,KAEE,qDAA0B,uBAAGiB,KAAK,IAAIf,GAAG,8BAAf,WAA1B,KACA,kBAAC,IAAD,CAAqBG,UAAU,QAAQE,OAAO,8BAA9C,uB,GA1FWE,aAoGRC","file":"static/js/32.8cf80b96.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Card, CardBody, CardHeader, Tooltip, UncontrolledTooltip } from 'reactstrap';\n\nclass TooltipItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      tooltipOpen: false,\n    };\n  }\n\n  toggle() {\n    this.setState({\n      tooltipOpen: !this.state.tooltipOpen,\n    });\n  }\n\n  render() {\n    return (\n      <span>\n        <Button className=\"mr-1\" color=\"secondary\" id={'Tooltip-' + this.props.id}>\n          {this.props.item.text}\n        </Button>\n        <Tooltip placement={this.props.item.placement} isOpen={this.state.tooltipOpen} target={'Tooltip-' + this.props.id} toggle={this.toggle}>\n          Tooltip Content!\n        </Tooltip>\n      </span>\n    );\n  }\n}\n\nclass Tooltips extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      tooltipOpen: [false, false],\n      tooltips: [\n        {\n          placement: 'top',\n          text: 'Top',\n        },\n        {\n          placement: 'bottom',\n          text: 'Bottom',\n        },\n        {\n          placement: 'left',\n          text: 'Left',\n        },\n        {\n          placement: 'right',\n          text: 'Right',\n        },\n      ],\n    };\n  }\n\n  toggle(i) {\n    const newArray = this.state.tooltipOpen.map((element, index) => {\n      return (index === i ? !element : false);\n    });\n    this.setState({\n      tooltipOpen: newArray,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i><strong>Tooltips</strong>\n            <div className=\"card-header-actions\">\n              <a href=\"https://reactstrap.github.io/components/tooltips/\" rel=\"noreferrer noopener\" target=\"_blank\" className=\"card-header-action\">\n                <small className=\"text-muted\">docs</small>\n              </a>\n            </div>\n          </CardHeader>\n          <CardBody>\n            {/*eslint-disable-next-line*/}\n            <p>Somewhere in here is a <a href=\"#\" id=\"TooltipExample\">tooltip</a>.</p>\n            <Tooltip placement=\"right\" isOpen={this.state.tooltipOpen[0]} target=\"TooltipExample\" toggle={() => {this.toggle(0);}}>\n              Hello world!\n            </Tooltip>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i><strong>Tooltip</strong>\n            <small> disable autohide</small>\n          </CardHeader>\n          <CardBody>\n            {/*eslint-disable-next-line*/}\n            <p>Sometimes you need to allow users to select text within a <a href=\"#\" id=\"DisabledAutoHideExample\">tooltip</a>.</p>\n            <Tooltip placement=\"top\" isOpen={this.state.tooltipOpen[1]} autohide={false} target=\"DisabledAutoHideExample\" toggle={() => {this.toggle(1);}}>\n              Try to select this text!\n            </Tooltip>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i><strong>Tooltip</strong>\n            <small> list</small>\n          </CardHeader>\n          <CardBody>\n            {this.state.tooltips.map((tooltip, i) => {\n              return <TooltipItem key={i} item={tooltip} id={i} />;\n            })}\n          </CardBody>\n        </Card>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i><strong>Tooltip</strong>\n            <small> uncontrolled</small>\n          </CardHeader>\n          <CardBody>\n            {/*eslint-disable-next-line*/}\n            <p>Somewhere in here is a <a href=\"#\" id=\"UncontrolledTooltipExample\">tooltip</a>.</p>\n            <UncontrolledTooltip placement=\"right\" target=\"UncontrolledTooltipExample\">\n              Hello world!\n            </UncontrolledTooltip>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Tooltips;\n"],"sourceRoot":""}